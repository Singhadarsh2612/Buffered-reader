{"ast":null,"code":"var _jsxFileName = \"/Users/adarsh/Desktop/Buffered_reader_frontend/src/components/PDFFlipbook.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Document, Page, pdfjs } from \"react-pdf\";\nimport HTMLFlipBook from \"react-pageflip\";\n\n// Set up the PDF worker\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.min.js`;\nconst PDFFlipbook = ({\n  pdfUrl\n}) => {\n  _s();\n  const [numPages, setNumPages] = useState(null); // Total number of pages in the PDF\n  const [pageNumbers, setPageNumbers] = useState([]); // Array of page numbers\n\n  // Handle PDF load success\n  const onDocumentLoadSuccess = ({\n    numPages\n  }) => {\n    setNumPages(numPages);\n    setPageNumbers(Array.from({\n      length: numPages\n    }, (_, i) => i + 1)); // Create an array of page numbers\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pdf-flipbook-container\",\n    children: /*#__PURE__*/_jsxDEV(Document, {\n      file: pdfUrl,\n      onLoadSuccess: onDocumentLoadSuccess,\n      children: /*#__PURE__*/_jsxDEV(HTMLFlipBook, {\n        width: 500,\n        height: 700,\n        children: pageNumbers.map(pageNumber => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"page\",\n          children: /*#__PURE__*/_jsxDEV(Page, {\n            pageNumber: pageNumber,\n            width: 500\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 15\n          }, this)\n        }, pageNumber, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(PDFFlipbook, \"AZygVFBNiXCsTaapkUUkRb+3WCk=\");\n_c = PDFFlipbook;\nexport default PDFFlipbook;\nvar _c;\n$RefreshReg$(_c, \"PDFFlipbook\");","map":{"version":3,"names":["React","useState","Document","Page","pdfjs","HTMLFlipBook","jsxDEV","_jsxDEV","GlobalWorkerOptions","workerSrc","version","PDFFlipbook","pdfUrl","_s","numPages","setNumPages","pageNumbers","setPageNumbers","onDocumentLoadSuccess","Array","from","length","_","i","className","children","file","onLoadSuccess","width","height","map","pageNumber","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/adarsh/Desktop/Buffered_reader_frontend/src/components/PDFFlipbook.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Document, Page, pdfjs } from \"react-pdf\";\nimport HTMLFlipBook from \"react-pageflip\";\n\n// Set up the PDF worker\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.min.js`;\n\nconst PDFFlipbook = ({ pdfUrl }) => {\n  const [numPages, setNumPages] = useState(null); // Total number of pages in the PDF\n  const [pageNumbers, setPageNumbers] = useState([]); // Array of page numbers\n\n  // Handle PDF load success\n  const onDocumentLoadSuccess = ({ numPages }) => {\n    setNumPages(numPages);\n    setPageNumbers(Array.from({ length: numPages }, (_, i) => i + 1)); // Create an array of page numbers\n  };\n\n  return (\n    <div className=\"pdf-flipbook-container\">\n      {/* Render the PDF document */}\n      <Document file={pdfUrl} onLoadSuccess={onDocumentLoadSuccess}>\n        {/* Create a flipbook using react-pageflip */}\n        <HTMLFlipBook width={500} height={700}>\n          {pageNumbers.map((pageNumber) => (\n            <div key={pageNumber} className=\"page\">\n              {/* Render each page of the PDF */}\n              <Page pageNumber={pageNumber} width={500} />\n            </div>\n          ))}\n        </HTMLFlipBook>\n      </Document>\n    </div>\n  );\n};\n\nexport default PDFFlipbook;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,QAAQ,EAAEC,IAAI,EAAEC,KAAK,QAAQ,WAAW;AACjD,OAAOC,YAAY,MAAM,gBAAgB;;AAEzC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACAH,KAAK,CAACI,mBAAmB,CAACC,SAAS,GAAG,2CAA2CL,KAAK,CAACM,OAAO,oBAAoB;AAElH,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAClC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAChD,MAAM,CAACe,WAAW,EAAEC,cAAc,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAEpD;EACA,MAAMiB,qBAAqB,GAAGA,CAAC;IAAEJ;EAAS,CAAC,KAAK;IAC9CC,WAAW,CAACD,QAAQ,CAAC;IACrBG,cAAc,CAACE,KAAK,CAACC,IAAI,CAAC;MAAEC,MAAM,EAAEP;IAAS,CAAC,EAAE,CAACQ,CAAC,EAAEC,CAAC,KAAKA,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EACrE,CAAC;EAED,oBACEhB,OAAA;IAAKiB,SAAS,EAAC,wBAAwB;IAAAC,QAAA,eAErClB,OAAA,CAACL,QAAQ;MAACwB,IAAI,EAAEd,MAAO;MAACe,aAAa,EAAET,qBAAsB;MAAAO,QAAA,eAE3DlB,OAAA,CAACF,YAAY;QAACuB,KAAK,EAAE,GAAI;QAACC,MAAM,EAAE,GAAI;QAAAJ,QAAA,EACnCT,WAAW,CAACc,GAAG,CAAEC,UAAU,iBAC1BxB,OAAA;UAAsBiB,SAAS,EAAC,MAAM;UAAAC,QAAA,eAEpClB,OAAA,CAACJ,IAAI;YAAC4B,UAAU,EAAEA,UAAW;YAACH,KAAK,EAAE;UAAI;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC,GAFpCJ,UAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGf,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACU;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEV,CAAC;AAACtB,EAAA,CA1BIF,WAAW;AAAAyB,EAAA,GAAXzB,WAAW;AA4BjB,eAAeA,WAAW;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}