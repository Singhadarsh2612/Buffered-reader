{"ast":null,"code":"var _jsxFileName = \"/Users/adarsh/Desktop/Buffered_reader_frontend/src/components/Flipbook.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Document, Page, pdfjs } from \"react-pdf\";\nimport { useLocation } from \"react-router-dom\";\n\n// Fix the worker error\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\npdfjs.GlobalWorkerOptions.workerSrc = `https://cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.min.js`;\nfunction Flipbook() {\n  _s();\n  const location = useLocation();\n  const pdfUrl = decodeURIComponent(new URLSearchParams(location.search).get(\"pdf\"));\n  const [blobUrl, setBlobUrl] = useState(null);\n  useEffect(() => {\n    async function fetchPdf() {\n      try {\n        const response = await fetch(pdfUrl);\n        if (!response.ok) throw new Error(\"Failed to fetch PDF\");\n        const blob = await response.blob();\n        setBlobUrl(URL.createObjectURL(blob));\n      } catch (error) {\n        console.error(\"Error fetching PDF:\", error);\n      }\n    }\n    fetchPdf();\n  }, [pdfUrl]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"PDF Viewer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), blobUrl ? /*#__PURE__*/_jsxDEV(Document, {\n      file: blobUrl,\n      children: /*#__PURE__*/_jsxDEV(Page, {\n        pageNumber: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading PDF...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(Flipbook, \"lrKxZ41Kbly4zokC2f/kRjsoo94=\", false, function () {\n  return [useLocation];\n});\n_c = Flipbook;\nexport default Flipbook;\nvar _c;\n$RefreshReg$(_c, \"Flipbook\");","map":{"version":3,"names":["React","useState","useEffect","Document","Page","pdfjs","useLocation","jsxDEV","_jsxDEV","GlobalWorkerOptions","workerSrc","version","Flipbook","_s","location","pdfUrl","decodeURIComponent","URLSearchParams","search","get","blobUrl","setBlobUrl","fetchPdf","response","fetch","ok","Error","blob","URL","createObjectURL","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","file","pageNumber","_c","$RefreshReg$"],"sources":["/Users/adarsh/Desktop/Buffered_reader_frontend/src/components/Flipbook.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Document, Page, pdfjs } from \"react-pdf\";\nimport { useLocation } from \"react-router-dom\";\n\n// Fix the worker error\npdfjs.GlobalWorkerOptions.workerSrc = `https://cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.min.js`;\n\nfunction Flipbook() {\n  const location = useLocation();\n  const pdfUrl = decodeURIComponent(new URLSearchParams(location.search).get(\"pdf\"));\n  const [blobUrl, setBlobUrl] = useState(null);\n\n  useEffect(() => {\n    async function fetchPdf() {\n      try {\n        const response = await fetch(pdfUrl);\n        if (!response.ok) throw new Error(\"Failed to fetch PDF\");\n        const blob = await response.blob();\n        setBlobUrl(URL.createObjectURL(blob));\n      } catch (error) {\n        console.error(\"Error fetching PDF:\", error);\n      }\n    }\n    fetchPdf();\n  }, [pdfUrl]);\n\n  return (\n    <div>\n      <h1>PDF Viewer</h1>\n      {blobUrl ? (\n        <Document file={blobUrl}>\n          <Page pageNumber={1} />\n        </Document>\n      ) : (\n        <p>Loading PDF...</p>\n      )}\n    </div>\n  );\n}\n\nexport default Flipbook;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,QAAQ,EAAEC,IAAI,EAAEC,KAAK,QAAQ,WAAW;AACjD,SAASC,WAAW,QAAQ,kBAAkB;;AAE9C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACAH,KAAK,CAACI,mBAAmB,CAACC,SAAS,GAAG,iDAAiDL,KAAK,CAACM,OAAO,oBAAoB;AAExH,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAMS,MAAM,GAAGC,kBAAkB,CAAC,IAAIC,eAAe,CAACH,QAAQ,CAACI,MAAM,CAAC,CAACC,GAAG,CAAC,KAAK,CAAC,CAAC;EAClF,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,eAAeoB,QAAQA,CAAA,EAAG;MACxB,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACT,MAAM,CAAC;QACpC,IAAI,CAACQ,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,qBAAqB,CAAC;QACxD,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACI,IAAI,CAAC,CAAC;QAClCN,UAAU,CAACO,GAAG,CAACC,eAAe,CAACF,IAAI,CAAC,CAAC;MACvC,CAAC,CAAC,OAAOG,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC7C;IACF;IACAR,QAAQ,CAAC,CAAC;EACZ,CAAC,EAAE,CAACP,MAAM,CAAC,CAAC;EAEZ,oBACEP,OAAA;IAAAwB,QAAA,gBACExB,OAAA;MAAAwB,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAClBhB,OAAO,gBACNZ,OAAA,CAACL,QAAQ;MAACkC,IAAI,EAAEjB,OAAQ;MAAAY,QAAA,eACtBxB,OAAA,CAACJ,IAAI;QAACkC,UAAU,EAAE;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf,CAAC,gBAEX5B,OAAA;MAAAwB,QAAA,EAAG;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACrB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACvB,EAAA,CA/BQD,QAAQ;EAAA,QACEN,WAAW;AAAA;AAAAiC,EAAA,GADrB3B,QAAQ;AAiCjB,eAAeA,QAAQ;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}