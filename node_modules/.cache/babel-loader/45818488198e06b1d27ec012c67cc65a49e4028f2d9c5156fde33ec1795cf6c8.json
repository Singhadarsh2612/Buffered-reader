{"ast":null,"code":"var _jsxFileName = \"/Users/adarsh/Desktop/Buffered_reader_frontend/src/components/PDFFlipbook.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Document, Page, pdfjs } from \"react-pdf\";\nimport { useLocation } from \"react-router-dom\";\n\n// Set up the PDF worker\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\npdfjs.GlobalWorkerOptions.workerSrc = `${process.env.PUBLIC_URL}/pdf.worker.mjs`;\nconst PdfViewer = () => {\n  _s();\n  var _location$state;\n  const location = useLocation();\n  const pdfUrl = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.pdfUrl) || \"\"; // Get the PDF URL from location state\n  const [numPages, setNumPages] = useState(null); // Total number of pages\n  const [pageNumber, setPageNumber] = useState(1); // Current page number\n  const [error, setError] = useState(null); // Error state\n\n  // Handle PDF load success\n  const onDocumentLoadSuccess = ({\n    numPages\n  }) => {\n    setNumPages(numPages);\n    setPageNumber(1); // Reset to the first page when a new PDF is loaded\n  };\n\n  // Handle errors when loading the PDF\n  const onDocumentLoadError = error => {\n    console.error(\"Error loading PDF:\", error);\n    setError(\"Failed to load the PDF. Please check the URL and try again.\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pdf-viewer\",\n    children: error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navigation-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setPageNumber(prev => Math.max(prev - 1, 1)),\n          disabled: pageNumber === 1,\n          children: \"\\u2B05 Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setPageNumber(prev => Math.min(prev + 1, numPages)),\n          disabled: pageNumber === numPages,\n          children: \"Next \\u27A1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), pdfUrl && /*#__PURE__*/_jsxDEV(Document, {\n        file: pdfUrl // Use the dynamically passed PDF URL\n        ,\n        onLoadSuccess: onDocumentLoadSuccess,\n        onLoadError: onDocumentLoadError,\n        children: /*#__PURE__*/_jsxDEV(Page, {\n          pageNumber: pageNumber,\n          width: 600\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Page \", pageNumber, \" of \", numPages]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(PdfViewer, \"plX+Alw8WS1OyUbsN6uG9pIMaiA=\", false, function () {\n  return [useLocation];\n});\n_c = PdfViewer;\nexport default PdfViewer;\nvar _c;\n$RefreshReg$(_c, \"PdfViewer\");","map":{"version":3,"names":["React","useState","useEffect","Document","Page","pdfjs","useLocation","jsxDEV","_jsxDEV","Fragment","_Fragment","GlobalWorkerOptions","workerSrc","process","env","PUBLIC_URL","PdfViewer","_s","_location$state","location","pdfUrl","state","numPages","setNumPages","pageNumber","setPageNumber","error","setError","onDocumentLoadSuccess","onDocumentLoadError","console","className","children","style","color","fileName","_jsxFileName","lineNumber","columnNumber","onClick","prev","Math","max","disabled","min","file","onLoadSuccess","onLoadError","width","_c","$RefreshReg$"],"sources":["/Users/adarsh/Desktop/Buffered_reader_frontend/src/components/PDFFlipbook.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Document, Page, pdfjs } from \"react-pdf\";\nimport { useLocation } from \"react-router-dom\";\n\n// Set up the PDF worker\npdfjs.GlobalWorkerOptions.workerSrc = `${process.env.PUBLIC_URL}/pdf.worker.mjs`;\n\nconst PdfViewer = () => {\n  const location = useLocation();\n  const pdfUrl = location.state?.pdfUrl || \"\"; // Get the PDF URL from location state\n  const [numPages, setNumPages] = useState(null); // Total number of pages\n  const [pageNumber, setPageNumber] = useState(1); // Current page number\n  const [error, setError] = useState(null); // Error state\n\n  // Handle PDF load success\n  const onDocumentLoadSuccess = ({ numPages }) => {\n    setNumPages(numPages);\n    setPageNumber(1); // Reset to the first page when a new PDF is loaded\n  };\n\n  // Handle errors when loading the PDF\n  const onDocumentLoadError = (error) => {\n    console.error(\"Error loading PDF:\", error);\n    setError(\"Failed to load the PDF. Please check the URL and try again.\");\n  };\n\n  return (\n    <div className=\"pdf-viewer\">\n      {error ? (\n        <p style={{ color: \"red\" }}>{error}</p>\n      ) : (\n        <>\n          {/* Navigation Buttons */}\n          <div className=\"navigation-buttons\">\n            <button\n              onClick={() => setPageNumber((prev) => Math.max(prev - 1, 1))}\n              disabled={pageNumber === 1}\n            >\n              ⬅ Previous\n            </button>\n            <button\n              onClick={() => setPageNumber((prev) => Math.min(prev + 1, numPages))}\n              disabled={pageNumber === numPages}\n            >\n              Next ➡\n            </button>\n          </div>\n\n          {/* PDF Document */}\n          {pdfUrl && (\n            <Document\n              file={pdfUrl} // Use the dynamically passed PDF URL\n              onLoadSuccess={onDocumentLoadSuccess}\n              onLoadError={onDocumentLoadError}\n            >\n              <Page pageNumber={pageNumber} width={600} />\n            </Document>\n          )}\n\n          {/* Page Indicator */}\n          <p>\n            Page {pageNumber} of {numPages}\n          </p>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default PdfViewer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}